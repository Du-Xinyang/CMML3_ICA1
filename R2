##################################################### Energy minimization #####################################################
library(tidyr)
library(dplyr)
library(ggplot2)
setwd("D:/CMML3/ICA/R_result/Energy/")
# Energy minimization
# Receives potential.xvg
T300 <- read.table("T300.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                        stringsAsFactors = FALSE)
T300_1 <- read.table("T300_1.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                   stringsAsFactors = FALSE)
T300_2 <- read.table("T300_2.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                   stringsAsFactors = FALSE)
max_len <- max(length(T300$V1), length(T300_1$V2), length(T300_2$V2))
T300_new <- c(T300$V2, rep(NA, max_len - length(T300$V1)))
T300_1_new <- c(T300_1$V2, rep(NA, max_len - length(T300_1$V2)))
T300_2_new <- c(T300_2$V2, rep(NA, max_len - length(T300_2$V2)))

#Find the model that with the most length
energy <- as.data.frame(cbind(T300_2$V1,T300_new, T300_1_new, T300_2_new))
colnames(energy)<-c('Time','T300','T300_1',"T300_2")
long_df <- pivot_longer(energy, 
                        cols = -Time, 
                        names_to = "Replicate", 
                        values_to = "Value")
ggplot(data = long_df, aes(x = Time, y = Value, color = Replicate)) +
  geom_line() +
  geom_point() +
  ylim(min(T300$V2,T300_1$V2,T300_2$V2), 0) +
  labs(x = "Energy Minimization Step", y = bquote("Potential Energy (kJ "*~mol^-1*')')) +
  ggtitle("T300, Energy Minimization, Steepest Descent") +
  theme_bw() +
  theme(plot.title = element_text(size = rel(1.5), face = "bold"))
#################### Statistical analysis
anova_result <- aov(Value ~ Replicate, data = long_df)
summary(anova_result) # P value:   280K: 0.0936   300K: 0.324   320K: 0.105





##################################################### Temperature Equilibration #####################################################
setwd("D:/CMML3/ICA/R_result/Temperature/")
# Temperature equilibration
# Receives temperature.xvg
T320 <- read.table("T320.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                          stringsAsFactors = FALSE)
T320_1 <- read.table("T320_1.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                   stringsAsFactors = FALSE)
T320_2 <- read.table("T320_2.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                   stringsAsFactors = FALSE)
temperature <- cbind(T320,T320_1$V2,T320_2$V2)
colnames(temperature) <- c("Time","T320","T320_1","T320_2")
temperature$T320average10ps <- NA
temperature$T320_1average10ps <- NA
temperature$T320_2average10ps <- NA
temperature$T320average10ps[10:nrow(temperature)] <- sapply(10:nrow(temperature), function(x){mean(temperature$T320[(x-9):x])})
temperature$T320_1average10ps[10:nrow(temperature)] <- sapply(10:nrow(temperature), function(x){mean(temperature$T320_1[(x-9):x])})
temperature$T320_2average10ps[10:nrow(temperature)] <- sapply(10:nrow(temperature), function(x){mean(temperature$T320_2[(x-9):x])})

temperature2 <- temperature[,c(1,5:7)]
colnames(temperature2) <- c("Time","T320","T320_1","T320_2")
temperature <- temperature[,1:4]

long_df <- pivot_longer(temperature, 
                        cols = -Time, 
                        names_to = "Replicate", 
                        values_to = "Value") 
temperature2 <- pivot_longer(temperature2, 
                             cols = -Time, 
                             names_to = "Replicate", 
                             values_to = "Value") 
ggplot(data = long_df, aes(x = Time, y = Value, color = Replicate)) +
  geom_line() +
  geom_point() +
  geom_line(data = temperature2, aes(y = Value, col = Replicate)) +
  labs(x = "Time (ps)", y = "Temperature (K)") +
  ggtitle("T320K, Temperature, NVT equilibration") +
  theme_bw() +
  theme(#legend.position = c(0.80, 0.3),
        legend.title = element_blank(),
        plot.title = element_text(size = rel(1.5), face = "bold"))
#################### Statistical analysis
anova_result <- aov(Value ~ Replicate, data = long_df)
summary(anova_result) # P value:   280K: 0.451   300K: 0.962   320K: 0.912 



##################################################### Pressure Equilibration #####################################################
setwd("D:/CMML3/ICA/R_result/Pressure/")
# Pressure equilibration
# Receives Pressure.xvg
T300 <- read.table("T300.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                   stringsAsFactors = FALSE)
T300_1 <- read.table("T300_1.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                     stringsAsFactors = FALSE)
T300_2 <- read.table("T300_2.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                     stringsAsFactors = FALSE)
Pressure <- cbind(T300,T300_1$V2,T300_2$V2)
colnames(Pressure) <- c("Time","T300","T300_1","T300_2")
Pressure$T300average10ps <- NA
Pressure$T300_1average10ps <- NA
Pressure$T300_2average10ps <- NA
Pressure$T300average10ps[10:nrow(Pressure)] <- sapply(10:nrow(Pressure), function(x){mean(Pressure$T300[(x-9):x])})
Pressure$T300_1average10ps[10:nrow(Pressure)] <- sapply(10:nrow(Pressure), function(x){mean(Pressure$T300_1[(x-9):x])})
Pressure$T300_2average10ps[10:nrow(Pressure)] <- sapply(10:nrow(Pressure), function(x){mean(Pressure$T300_2[(x-9):x])})

Pressure2 <- Pressure[,c(1,5:7)]
colnames(Pressure2) <- c("Time","T300","T300_1","T300_2")
Pressure <- Pressure[,1:4]

long_df <- pivot_longer(Pressure, 
                        cols = -Time, 
                        names_to = "Replicate", 
                        values_to = "Value") 
Pressure2 <- pivot_longer(Pressure2, 
                             cols = -Time, 
                             names_to = "Replicate", 
                             values_to = "Value") 
ggplot(data = long_df, aes(x = Time, y = Value, color = Replicate)) +
  geom_line() +
  geom_point() +
  geom_line(data = Pressure2, aes(y = Value, col = Replicate)) +
  labs(x = "Time (ps)", y = "Pressure (K)") +
  ggtitle("T300K, Pressure, NVT equilibration") +
  theme_bw() +
  theme(#legend.position = c(1, 0.9),
        legend.title = element_blank(),
        plot.title = element_text(size = rel(1.5), face = "bold"))
#################### Statistical analysis
anova_result <- aov(Value ~ Replicate, data = long_df)
summary(anova_result) # P value:   280K: 0.338   300K: 0.421   320K: 0.595 




##################################################### Density Equilibration #####################################################
setwd("D:/CMML3/ICA/R_result/Density/")
# Density equilibration
# Receives Density.xvg
T320 <- read.table("T320.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                   stringsAsFactors = FALSE)
T320_1 <- read.table("T320_1.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                     stringsAsFactors = FALSE)
T320_2 <- read.table("T320_2.xvg", sep = "" , header = FALSE , skip = 24, na.strings = "",
                     stringsAsFactors = FALSE)
Density <- cbind(T320,T320_1$V2,T320_2$V2)
colnames(Density) <- c("Time","T320","T320_1","T320_2")
Density$T320average10ps <- NA
Density$T320_1average10ps <- NA
Density$T320_2average10ps <- NA
Density$T320average10ps[10:nrow(Density)] <- sapply(10:nrow(Density), function(x){mean(Density$T320[(x-9):x])})
Density$T320_1average10ps[10:nrow(Density)] <- sapply(10:nrow(Density), function(x){mean(Density$T320_1[(x-9):x])})
Density$T320_2average10ps[10:nrow(Density)] <- sapply(10:nrow(Density), function(x){mean(Density$T320_2[(x-9):x])})

Density2 <- Density[,c(1,5:7)]
colnames(Density2) <- c("Time","T320","T320_1","T320_2")
Density <- Density[,1:4]

long_df <- pivot_longer(Density, 
                        cols = -Time, 
                        names_to = "Replicate", 
                        values_to = "Value") 
Density2 <- pivot_longer(Density2, 
                             cols = -Time, 
                             names_to = "Replicate", 
                             values_to = "Value") 
ggplot(data = long_df, aes(x = Time, y = Value, color = Replicate)) +
  geom_line() +
  geom_point() +
  geom_line(data = Density2, aes(y = Value, col = Replicate)) +
  labs(x = "Time (ps)", y = "Density (K)") +
  ggtitle("T320K, Density, NVT equilibration") +
  theme_bw() +
  theme(#legend.position = c(0.80, 0.3),
    legend.title = element_blank(),
    plot.title = element_text(size = rel(1.5), face = "bold"))
#################### Statistical analysis
anova_result <- aov(Value ~ Replicate, data = long_df)
summary(anova_result) # P value:   280K: 0.854   300K: 0.962   320K: 0.418 



##################################################### RMSD #####################################################
setwd("D:/CMML3/ICA/R_result/RMSD/")
library(ggplot2)
# RMSD, backbone
# Receives rmsd.xvg and rmsd_xtal.xvg

# For Fig.1C
# rmsd_T280_2 <- read.table("T280_2.xvg", sep = "" , header = FALSE , skip = 18, na.strings = "",
                                stringsAsFactors = FALSE)
# rmsd_T300_2 <- read.table("T300_2.xvg", sep = "" , header = FALSE , skip = 18, na.strings = "",
                        stringsAsFactors = FALSE)
# rmsd_T320_2 <- read.table("T320_2.xvg", sep = "" , header = FALSE , skip = 18, na.strings = "",
                          stringsAsFactors = FALSE)
# rmsd <- rmsd_T280_2
# names(rmsd) <- c("time", "T320")
# rmsd$T300_2 <- rmsd_T300_2$V2
# rmsd$T320_2 <- rmsd_T320_2$V2
# rmsd_filtered <- rmsd[rmsd$time >= 20 & rmsd$time <= 25, ]
# 
# long_df <- pivot_longer(rmsd_filtered,
#                         cols = -time,
#                         names_to = "Replicate",
#                         values_to = "Value")
# anova_result <- aov(Value ~ Replicate, data = long_df)
# summary(anova_result)
# tukey_result <- TukeyHSD(anova_result)
# print(tukey_result)

# ggplot(long_df, aes(x = time)) +
#   geom_line(aes(y = T280_2, col = "Ref: T280")) +
#   geom_line(aes(y = T300_2, col = "Ref: T300")) +
#   geom_line(aes(y = T320_2, col = "Ref: T320") ) +
#   labs(x = "Time (ns)", y = "RMSD (nm)") +
#   ggtitle("RMSD Comparison, backbone") +
#   theme_bw() +
#   theme(legend.position = c(0.80, 0.2),
#         legend.title = element_blank(),
#         plot.title = element_text(size = rel(1.5), face = "bold"))


# For Fig1.A, change the input file to T280.xvg, T280_1.xvg, T280_2.xvg
rmsd <- rmsd_T280
names(rmsd) <- c("time", "T280")
rmsd$T280_1 <- rmsd_T280_1$V2
rmsd$T280_2 <- rmsd_T280_2$V2
red_palette <- c("#8B0000", "#B22222", "#FF6347")  # for 280K
green_palette <- c("#006400", "#228B22", "#32CD32")  # for 300K
blue_palette <- c("#00008B", "#1E90FF", "#87CEFA")  # for 320K
ggplot(rmsd, aes(x = time)) +
  geom_line(aes(y = T320, color = "Ref: T320"), linewidth = 1) +
  geom_line(aes(y = T320_1, color = "Ref: T320_1"), linewidth = 1) +
  geom_line(aes(y = T320_2, color = "Ref: T320_2"), linewidth = 1) +
  scale_color_manual(
    values = blue_palette,  
    labels = c("T320", "T320_1", "T320_2")  
  ) +
  labs(
    x = "Time (ns)", 
    y = "RMSD (nm)", 
    title = "320K RMSD Comparison, backbone",
    color = "Temperature"  
  ) +
  theme_bw() +
  theme(
    legend.position = c(0.80, 0.2),
    legend.title = element_text(size = 12, face = "bold"),
    legend.text = element_text(size = 10),
    plot.title = element_text(size = rel(1.5), face = "bold"),
    panel.grid.major = element_line(color = "grey90") 
  )




##################################################### Rg #####################################################
setwd("D:/CMML3/ICA/R_result/gyrate/")
library(tidyr)
# Radius of gyration
# Receives gyrate.xvg

# For Fig.1D
T300 <- read.table("T300.xvg", sep = "" , header = FALSE , skip = 27, na.strings = "",
                       stringsAsFactors = FALSE)
T300_1 <- read.table("T300_1.xvg", sep = "" , header = FALSE , skip = 27, na.strings = "",
                    stringsAsFactors = FALSE)
T300_2 <- read.table("T300_2.xvg", sep = "" , header = FALSE , skip = 27, na.strings = "",
                    stringsAsFactors = FALSE)
time <- T300$V1/1000
gyration <- as.data.frame(cbind(time,T300$V2,T300_1$V2,T300_2$V2))
colnames(gyration) <- c("Time","T300","T300_1","T300_2")
long_df <- pivot_longer(gyration, 
                        cols = -Time, 
                        names_to = "Replicate", 
                        values_to = "Value") 

# For Fig.1E
gyration_filtered <- gyration[gyration$Time >= 15 & gyration$Time <= 25, ]
long_df <- pivot_longer(gyration_filtered, 
                        cols = -Time, 
                        names_to = "Replicate", 
                        values_to = "Value") 
anova_result <- aov(Value ~ Replicate, data = long_df)
summary(anova_result) # P = 0.137

ggplot(data = long_df, aes(x = Time, y = Value,color = Replicate)) +
  geom_line() +
  labs(x = "Time (ns)", y = bquote(~R[g]*" (nm)")) +
  ggtitle("50ns, Radius of gyration") +
  theme_bw() +
  theme(plot.title = element_text(size = rel(1.5), face = "bold"))


#For Fig.1B
red_palette <- c("#8B0000", "#B22222", "#FF6347")  # for 280K
green_palette <- c("#006400", "#228B22", "#32CD32")  # for 300K
blue_palette <- c("#00008B", "#1E90FF", "#87CEFA")  # for 320K
ggplot(long_df, aes(x = Time, y = Value, color = Replicate)) + # long_df represents the complete 50ns simulation rather than gyration_filtered
  geom_line(linewidth = 1.2) +  
  scale_color_manual(
    name = "Replicates",  
    values = blue_palette,
    labels = c("T280", "T300_1", "T300_2")  
  ) +
  labs(
    x = "Time (ns)", 
    y = bquote(~R[g]~"(nm)"), 
    title = "Radius of Gyration (50 ns Simulation)"
  ) +
  theme_bw(base_size = 14) +  
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5),  
    #legend.position = c(1, 0.5),  
    legend.background = element_rect(fill = "white", color = "grey70"), 
    panel.grid.minor = element_blank() 
  )


##################################################### DSSP #####################################################
setwd("D:/CMML3/ICA/R_result/DSSP/")
library(tidyr)
# Radius of gyration
# Receives gyrate.xvg
T320_2 <- read.table("T320_2.xvg", sep = "" , header = FALSE , skip = 33, na.strings = "",
                   stringsAsFactors = FALSE)
colnames(T320_2)<-c("Time","α-helix","β-bridge","β-sheet","3_10-helix","Π-helix","PPII helix","bend","turn","break","loop")
data_long <- pivot_longer(T320_2, cols = -Time, names_to = "Structure", values_to = "Count")

# Draw a stacked bar chart
ggplot(data_long, aes(x = Time, y = Count, fill = Structure)) +
  geom_bar(stat = "identity") +
  labs(title = "320K Number of Secondary Structures Over Time",
       x = "Time (ps)",
       y = "Number of Structures",
       fill = "Secondary Structures") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set3")
